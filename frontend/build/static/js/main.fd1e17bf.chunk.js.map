{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/SingleNote/SingleNote.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleNote/CreateNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","reducers/notesReducers.js","store.js","reducers/userReducers.js","index.js"],"names":["Footer","_jsx","style","width","position","bottom","display","justifyContent","children","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Header","setSearch","dispatch","useDispatch","userLogin","useSelector","state","userInfo","useEffect","Navbar","collapseOnSelect","expand","bg","variant","_jsxs","Brand","href","Toggle","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","_Fragment","Link","NavDropdown","title","concat","name","Item","Divider","onClick","logoutHandler","async","localStorage","removeItem","LandingPage","history","push","to","Button","size","MainScreen","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","config","headers","Authorization","token","data","axios","delete","payload","error","message","response","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","loading","notes","noteDelete","loadingDelete","errorDelete","success","successDelete","noteCreate","successCreate","noteUpdate","successUpdate","get","console","log","marginLeft","marginBottom","filter","filteredNote","toLowerCase","includes","reverse","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","deleteHandler","window","confirm","Body","Badge","content","ReactMarkdown","category","createdAt","substring","SingleNote","match","setTitle","useState","setContent","setCategory","date","setDate","params","updatedAt","fetching","onSubmit","preventDefault","updateNoteAction","put","Group","controlId","Label","Control","rows","LoginScreen","email","setEmail","password","setPassword","login","post","setItem","JSON","stringify","RegisterScreen","setName","special","setSpecial","contact","setContact","pic","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateNote","resetHandler","createNoteAction","Date","toLocaleDateString","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","src","alt","App","Router","s","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","noteListReducer","action","userLoginReducer","userRegisterReducer","noteCreateReducer","noteDeleteReducer","noteUpdateReducer","userUpdateReducer","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.fd1e17bf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Patient Records</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {} from \"react-router-dom\";\nimport { logout } from \"../actions/userActions\";\n\nfunction Header({ setSearch }) {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {}, [userInfo]);\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">Patient Record</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Patient Name\"\n                  className=\"mr-sm-2\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n          <Nav>\n            {userInfo ? (\n              <>\n                <Nav.Link href=\"/record\">Patients Record</Nav.Link>\n                <NavDropdown\n                  title={`${userInfo.name}`}\n                  id=\"collasible-nav-dropdown\"\n                >\n                  <NavDropdown.Item href=\"/profile\">\n                    {/* <img\n                      alt=\"\"\n                      src={`${userInfo.pic}`}\n                      width=\"25\"\n                      height=\"25\"\n                      style={{ marginRight: 10 }}\n                    /> */}\n                    My Profile\n                  </NavDropdown.Item>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name,contact,special, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name,contact,special, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingStyles.css\";\n\nfunction LandingPage({ history }) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/record\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              <h1 className=\"title\">Welcome Doctor</h1>\n              <p className=\"subtitle\">One Safe place for all patient record.</p>\n            </div>\n            <div className=\"buttonContainer\">\n              <Link to=\"/login\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Login\n                </Button>\n              </Link>\n              <Link to=\"/register\">\n                <Button\n                  variant=\"outline-primary\"\n                  size=\"lg\"\n                  className=\"landingbutton\"\n                >\n                  Signup\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport \"./Screen.css\";\n\nfunction MainScreen({ children, title }) {\n  return (\n    <div className=\"mainback\">\n      <Container>\n        <Row>\n          <div className=\"page\">\n            {title && (\n              <>\n                <h1 className=\"heading\">{title}</h1>\n                <hr />\n              </>\n            )}\n            {children}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","export const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\nexport const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\nexport const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\n\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\n\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\n\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";\n","import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\nimport axios from \"axios\";\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/notes`, config);\n\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createNoteAction = (title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: NOTES_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/notes/create`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: NOTES_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateNoteAction = (id, title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: NOTES_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/notes/${id}`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: NOTES_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction MyNotes({ history, search }) {\n  const dispatch = useDispatch();\n\n  const noteList = useSelector((state) => state.noteList);\n  const { loading, error, notes } = noteList;\n\n  // const filteredNotes = notes.filter((note) =>\n  //   note.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { success: successCreate } = noteCreate;\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n\n  useEffect(() => {\n    dispatch(listNotes());\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you really want to delete it?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  return (\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\n      {console.log(notes)}\n      <Link to=\"/create\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Patient Record\n        </Button>\n      </Link>\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n      {notes &&\n        notes\n          .filter((filteredNote) =>\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((note) => (\n            <Accordion>\n              <Card style={{ margin: 10 }} key={note._id}>\n                <Card.Header style={{ display: \"flex\" }}>\n                  <span\n                    // onClick={() => ModelShow(note)}\n                    style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 1,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      variant=\"link\"\n                      eventKey=\"0\"\n                    >\n                      {note.title}\n                    </Accordion.Toggle>\n                  </span>\n\n                  <div>\n                    <Button href={`/edit/${note._id}`}>Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(note._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <h4>\n                      <Badge variant=\"success\">\n                        Age - {note.content}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                      <ReactMarkdown>{note.category}</ReactMarkdown>\n                      <footer className=\"blockquote-footer\">\n                        Created on{\" \"}\n                        <cite title=\"Source Title\">\n                          {note.createdAt.substring(0, 10)}\n                        </cite>\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          ))}\n    </MainScreen>\n  );\n}\n\nexport default MyNotes;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleNote({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n    history.push(\"/record\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateNoteAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/record\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Record\">\n      <Card>\n        <Card.Header>Edit Patient Record</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the Name\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>  Age</Form.Label>\n              <Form.Control\n                \n                placeholder=\"Enter the Age\"\n                \n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n           \n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Medical History</Form.Label>\n              <Form.Control\n              as=\"textarea\"\n                type=\"content\"\n                placeholder=\"Enter the Previous History\"\n                rows={4}\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Note\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Note\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { login } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\n\nfunction LoginScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/record\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <MainScreen title=\"LOGIN\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            New Customer ? <Link to=\"/register\">Register Here</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { register } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./RegisterScreen.css\";\n\nfunction RegisterScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [special, setSpecial] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name,contact,special, email, password, pic));\n  };\n\n  return (\n    <MainScreen title=\"REGISTER\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"special\">\n            <Form.Label>Specialization</Form.Label>\n            <Form.Control\n              type=\"special\"\n              value={special}\n              placeholder=\"Enter Specialization\"\n              onChange={(e) => setSpecial(e.target.value)}\n            />\n          </Form.Group>\n          \n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={confirmpassword}\n              placeholder=\"Confirm Password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"contact\">\n            <Form.Label>contact</Form.Label>\n            <Form.Control\n              type=\"contact\"\n              value={contact}\n              placeholder=\"Enter contact\"\n              onChange={(e) => setContact(e.target.value)}\n            />\n          </Form.Group>\n          {picMessage && (\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n          )}\n          <Form.Group controlId=\"pic\">\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.File\n              onChange={(e) => postDetails(e.target.files[0])}\n              id=\"custom-file\"\n              type=\"image/png\"\n              label=\"Upload Profile Picture\"\n              custom\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            Have an Account ? <Link to=\"/login\">Login</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateNote({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n\n  console.log(note);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/record\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create  Record\">\n      <Card>\n        <Card.Header>Create new Patient Record\n\n        </Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the Name\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                \n                value={content}\n                placeholder=\"Enter the Age\"\n                \n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n          \n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Medical History</Form.Label>\n              <Form.Control\n                type=\"content\"\n                as=\"textarea\"\n                value={category}\n                rows={4}\n                placeholder=\"Enter the Previous History\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Note\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Feilds\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [special, setSpecial] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setContact(userInfo.contact);\n      setSpecial(userInfo.special);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name,contact, special,email, password, pic }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n            \n              <Form.Group controlId=\"special\">\n                <Form.Label>Specialization</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Specialization\"\n                  value={special}\n                  onChange={(e) => setSpecial(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"contact\">\n                <Form.Label>Contact</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter contcatame\"\n                  value={contact}\n                  onChange={(e) => setContact(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              {picMessage && (\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"pic\">\n                <Form.Label>Change Profile Picture</Form.Label>\n                <Form.File\n                  onChange={(e) => postDetails(e.target.files[0])}\n                  id=\"custom-file\"\n                  type=\"image/png\"\n                  label=\"Upload Profile Picture\"\n                  custom\n                />\n              </Form.Group>\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic\" />\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport MyNotes from \"./screens/MyNotes/MyNotes\";\nimport SingleNote from \"./screens/SingleNote/SingleNote\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateNote from \"./screens/SingleNote/CreateNote\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <Router>\n      <Header setSearch={(s) => setSearch(s)} />\n      <main className=\"App\">\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route\n          path=\"/record\"\n          component={({ history }) => (\n            <MyNotes search={search} history={history} />\n          )}\n        />\n        <Route path=\"/edit/:id\" component={SingleNote} />\n        <Route path=\"/create\" component={CreateNote} />;\n        <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const noteListReducer = (state = { notes: [] }, action) => {\n  switch (action.type) {\n    case NOTES_LIST_REQUEST:\n      return { loading: true };\n    case NOTES_LIST_SUCCESS:\n      return { loading: false, notes: action.payload };\n    case NOTES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_CREATE_REQUEST:\n      return { loading: true };\n    case NOTES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_DELETE_REQUEST:\n      return { loading: true };\n    case NOTES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_UPDATE_REQUEST:\n      return { loading: true };\n    case NOTES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}